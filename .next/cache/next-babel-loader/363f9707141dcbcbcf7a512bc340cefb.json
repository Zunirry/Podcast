{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\milto\\\\Desktop\\\\podcast\\\\pages\\\\channel.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audio = _this$props.audio,\n          series = _this$props.series;\n      console.log(channel, audio, series);\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"channel :D\");\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var query, idChannel, _yield$Promise$all, _yield$Promise$all2, requestChannel, requestAudio, requestSeries, dataChannel, channel, dataAudio, audio, dataSeries, series;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                idChannel = query.id;\n                _context.next = 4;\n                return Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\"))]);\n\n              case 4:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n                requestChannel = _yield$Promise$all2[0];\n                requestAudio = _yield$Promise$all2[1];\n                requestSeries = _yield$Promise$all2[2];\n                _context.next = 11;\n                return requestChannel.json();\n\n              case 11:\n                dataChannel = _context.sent;\n                _context.next = 14;\n                return dataChannel.body.channel;\n\n              case 14:\n                channel = _context.sent;\n                _context.next = 17;\n                return requestAudio.json();\n\n              case 17:\n                dataAudio = _context.sent;\n                _context.next = 20;\n                return dataAudio.body.audio_clips;\n\n              case 20:\n                audio = _context.sent;\n                _context.next = 23;\n                return requestSeries.json();\n\n              case 23:\n                dataSeries = _context.sent;\n                _context.next = 26;\n                return dataSeries.body.channel;\n\n              case 26:\n                series = _context.sent;\n                return _context.abrupt(\"return\", {\n                  channel: channel,\n                  audio: audio,\n                  series: series\n                });\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/milto/Desktop/podcast/pages/channel.js"],"names":["React","props","channel","audio","series","console","log","query","idChannel","id","Promise","all","fetch","requestChannel","requestAudio","requestSeries","json","dataChannel","body","dataAudio","audio_clips","dataSeries","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;;;;;;6BAyBY;AAAA,wBAC6B,KAAKC,KADlC;AAAA,UACGC,OADH,eACGA,OADH;AAAA,UACYC,KADZ,eACYA,KADZ;AAAA,UACmBC,MADnB,eACmBA,MADnB;AAEJC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB,EAA4BC,MAA5B;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH;;;;;;;;;;;AA7B6BG,gBAAAA,K,QAAAA,K;AACpBC,gBAAAA,S,GAAYD,KAAK,CAACE,E;;uBAEiCC,OAAO,CAACC,GAAR,CAAY,CAClEC,KAAK,8CAAuCJ,SAAvC,EAD6D,EAElEI,KAAK,8CAAuCJ,SAAvC,EAF6D,EAGlEI,KAAK,8CAAuCJ,SAAvC,kBAH6D,CAAZ,C;;;;;AAArDK,gBAAAA,c;AAAgBC,gBAAAA,Y;AAAcC,gBAAAA,a;;uBAMTF,cAAc,CAACG,IAAf,E;;;AAApBC,gBAAAA,W;;uBACgBA,WAAW,CAACC,IAAZ,CAAiBhB,O;;;AAAjCA,gBAAAA,O;;uBAEkBY,YAAY,CAACE,IAAb,E;;;AAAlBG,gBAAAA,S;;uBACcA,SAAS,CAACD,IAAV,CAAeE,W;;;AAA7BjB,gBAAAA,K;;uBAEmBY,aAAa,CAACC,IAAd,E;;;AAAnBK,gBAAAA,U;;uBACeA,UAAU,CAACH,IAAX,CAAgBhB,O;;;AAA/BE,gBAAAA,M;iDAEC;AAACF,kBAAAA,OAAO,EAAPA,OAAD;AAAUC,kBAAAA,KAAK,EAALA,KAAV;AAAiBC,kBAAAA,MAAM,EAANA;AAAjB,iB;;;;;;;;;;;;;;;;;;;EApBeJ,KAAK,CAACsB,S","sourcesContent":["import React from 'react'\r\n\r\nexport default class extends React.Component{\r\n\r\n    static async getInitialProps({query}){\r\n        const idChannel = query.id\r\n        \r\n       let [requestChannel, requestAudio, requestSeries] = await Promise.all([\r\n           fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n           fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n           fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n       ])\r\n\r\n       const dataChannel = await requestChannel.json()\r\n       const channel = await dataChannel.body.channel\r\n\r\n       const dataAudio = await requestAudio.json()\r\n       const audio = await dataAudio.body.audio_clips\r\n\r\n       const dataSeries = await requestSeries.json()\r\n       const series = await dataSeries.body.channel\r\n\r\n       return {channel, audio, series}\r\n    }\r\n\r\n    render(){\r\n        const {channel, audio, series} = this.props\r\n        console.log(channel, audio, series)\r\n        return(\r\n            <div>\r\n                channel :D\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}