{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\milto\\\\Desktop\\\\podcast\\\\pages\\\\channel.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/Layout';\nimport Serie from '../components/Serie';\nimport UltimosPodcast from '../components/UltimosPodcast';\nimport Error from 'next/error';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audios = _this$props.audios,\n          series = _this$props.series,\n          statusCode = _this$props.statusCode;\n      console.log(statusCode);\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return __jsx(Layout, {\n        title: channel.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, channel.title), __jsx(Serie, {\n        series: series,\n        channel: channel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, \"Ultimos Podcast\"), __jsx(UltimosPodcast, {\n        ultimosAudios: audios,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var query, res, idChannel, _yield$Promise$all, _yield$Promise$all2, requestChannel, requestAudio, requestSeries, dataChannel, channel, dataAudio, audios, dataSeries, series;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query, res = _ref.res;\n                idChannel = query.id;\n                _context.prev = 2;\n                _context.next = 5;\n                return Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\"))]);\n\n              case 5:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n                requestChannel = _yield$Promise$all2[0];\n                requestAudio = _yield$Promise$all2[1];\n                requestSeries = _yield$Promise$all2[2];\n                _context.next = 12;\n                return requestChannel.json();\n\n              case 12:\n                dataChannel = _context.sent;\n                channel = dataChannel.body.channel;\n                _context.next = 16;\n                return requestAudio.json();\n\n              case 16:\n                dataAudio = _context.sent;\n                audios = dataAudio.body.audio_clips;\n                _context.next = 20;\n                return requestSeries.json();\n\n              case 20:\n                dataSeries = _context.sent;\n                series = dataSeries.body.channels;\n\n                if (!(requestChannel.status >= 400)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  channel: null,\n                  audios: null,\n                  series: null,\n                  statusCode: requestChannel.status\n                });\n\n              case 24:\n                return _context.abrupt(\"return\", {\n                  channel: channel,\n                  audios: audios,\n                  series: series\n                });\n\n              case 27:\n                _context.prev = 27;\n                _context.t0 = _context[\"catch\"](2);\n                res.statusCode = 503;\n                return _context.abrupt(\"return\", {\n                  channel: null,\n                  audios: null,\n                  series: null,\n                  statusCode: 503\n                });\n\n              case 31:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 27]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/milto/Desktop/podcast/pages/channel.js"],"names":["Layout","Serie","UltimosPodcast","Error","props","channel","audios","series","statusCode","console","log","title","query","res","idChannel","id","Promise","all","fetch","requestChannel","requestAudio","requestSeries","json","dataChannel","body","dataAudio","audio_clips","dataSeries","channels","status","React","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;;;;;;;;;;;;;6BAsCa;AAAA,wBAC0C,KAAKC,KAD/C;AAAA,UACGC,OADH,eACGA,OADH;AAAA,UACYC,MADZ,eACYA,MADZ;AAAA,UACoBC,MADpB,eACoBA,MADpB;AAAA,UAC4BC,UAD5B,eAC4BA,UAD5B;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAEA,UAAGA,UAAU,KAAK,GAAlB,EAAsB;AAClB,eAAO,MAAC,KAAD;AAAO,UAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aACI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEH,OAAO,CAACM,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,OAAO,CAACM,KAAb,CAFJ,EAII,MAAC,KAAD;AAAO,QAAA,MAAM,EAAEJ,MAAf;AAAuB,QAAA,OAAO,EAAEF,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANJ,EAQI,MAAC,cAAD;AAAgB,QAAA,aAAa,EAAEC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ;AAaH;;;;;;;;;;;AAxD8BM,gBAAAA,K,QAAAA,K,EAAOC,G,QAAAA,G;AAC5BC,gBAAAA,S,GAAYF,KAAK,CAACG,E;;;uBAEsCC,OAAO,CAACC,GAAR,CAAY,CAClEC,KAAK,8CAAuCJ,SAAvC,EAD6D,EAElEI,KAAK,8CAAuCJ,SAAvC,kBAF6D,EAGlEI,KAAK,8CAAuCJ,SAAvC,qBAH6D,CAAZ,C;;;;;AAArDK,gBAAAA,c;AAAgBC,gBAAAA,Y;AAAcC,gBAAAA,a;;uBAOTF,cAAc,CAACG,IAAf,E;;;AAApBC,gBAAAA,W;AACAlB,gBAAAA,O,GAAUkB,WAAW,CAACC,IAAZ,CAAiBnB,O;;uBAETe,YAAY,CAACE,IAAb,E;;;AAAlBG,gBAAAA,S;AACAnB,gBAAAA,M,GAASmB,SAAS,CAACD,IAAV,CAAeE,W;;uBAELL,aAAa,CAACC,IAAd,E;;;AAAnBK,gBAAAA,U;AACApB,gBAAAA,M,GAASoB,UAAU,CAACH,IAAX,CAAgBI,Q;;sBAE5BT,cAAc,CAACU,MAAf,IAAyB,G;;;;;iDACjB;AACHxB,kBAAAA,OAAO,EAAE,IADN;AAEHC,kBAAAA,MAAM,EAAE,IAFL;AAGHC,kBAAAA,MAAM,EAAE,IAHL;AAIHC,kBAAAA,UAAU,EAAEW,cAAc,CAACU;AAJxB,iB;;;iDAQJ;AAAExB,kBAAAA,OAAO,EAAPA,OAAF;AAAWC,kBAAAA,MAAM,EAANA,MAAX;AAAmBC,kBAAAA,MAAM,EAANA;AAAnB,iB;;;;;AAEPM,gBAAAA,GAAG,CAACL,UAAJ,GAAiB,GAAjB;iDACO;AAACH,kBAAAA,OAAO,EAAE,IAAV;AAAgBC,kBAAAA,MAAM,EAAE,IAAxB;AAA8BC,kBAAAA,MAAM,EAAE,IAAtC;AAA4CC,kBAAAA,UAAU,EAAE;AAAxD,iB;;;;;;;;;;;;;;;;;;;EAjCUsB,KAAK,CAACC,S","sourcesContent":["import Layout from '../components/Layout'\r\nimport Serie from '../components/Serie'\r\n\r\nimport UltimosPodcast from '../components/UltimosPodcast'\r\nimport Error from 'next/error'\r\nexport default class extends React.Component {\r\n\r\n    static async getInitialProps({ query, res }) {\r\n        const idChannel = query.id\r\n        try{\r\n            let [requestChannel, requestAudio, requestSeries] = await Promise.all([\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n            ])\r\n\r\n            \r\n            const dataChannel = await requestChannel.json()\r\n            const channel = dataChannel.body.channel\r\n            \r\n            const dataAudio = await requestAudio.json()\r\n            const audios = dataAudio.body.audio_clips\r\n            \r\n            const dataSeries = await requestSeries.json()\r\n            const series = dataSeries.body.channels\r\n            \r\n            if(requestChannel.status >= 400){\r\n                return {\r\n                    channel: null, \r\n                    audios: null, \r\n                    series: null, \r\n                    statusCode: requestChannel.status\r\n                }\r\n            }\r\n\r\n            return { channel, audios, series }\r\n        }catch(error){\r\n            res.statusCode = 503\r\n            return {channel: null, audios: null, series: null, statusCode: 503 }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { channel, audios, series, statusCode} = this.props\r\n        console.log(statusCode)\r\n        \r\n        if(statusCode !== 200){\r\n            return <Error statusCode={statusCode} />\r\n        }\r\n\r\n        return (\r\n            <Layout title={channel.title}>\r\n                \r\n                <h1>{channel.title}</h1>\r\n\r\n                <Serie series={series} channel={channel} />\r\n\r\n                <h2>Ultimos Podcast</h2>\r\n                \r\n                <UltimosPodcast ultimosAudios={audios}/>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}