{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/Layout';\nimport Serie from '../components/Serie';\nimport UltimosPodcast from '../components/UltimosPodcast';\nimport Error from 'next/error';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, ultimosAudios) => {\n      event.preventDefault();\n      this.setState({\n        audio\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    const idChannel = query.id;\n\n    try {\n      let [requestChannel, requestAudio, requestSeries] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)]);\n\n      if (requestChannel.status >= 400) {\n        return {\n          channel: null,\n          audios: null,\n          series: null,\n          statusCode: requestChannel.status\n        };\n      }\n\n      const dataChannel = await requestChannel.json();\n      const channel = dataChannel.body.channel;\n      const dataAudio = await requestAudio.json();\n      const audios = dataAudio.body.audio_clips;\n      const dataSeries = await requestSeries.json();\n      const series = dataSeries.body.channels;\n      return {\n        channel,\n        audios,\n        series\n      };\n    } catch (error) {\n      res.statusCode = 503;\n      return {\n        channel: null,\n        audios: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audios,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n    console.log(openPodcast);\n\n    if (statusCode == 503) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    if (statusCode >= 400) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, openPodcast && __jsx(\"h2\", null, \"ASDASDASDASDSA\"), __jsx(\"h1\", null, channel.title), __jsx(Serie, {\n      series: series,\n      channel: channel\n    }), __jsx(\"h2\", null, \"Ultimos Podcast\"), __jsx(UltimosPodcast, {\n      ultimosAudios: audios,\n      onClickPodcast: this.openPodcast\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/milto/Desktop/podcast/pages/channel.js"],"names":["Layout","Serie","UltimosPodcast","Error","React","Component","constructor","props","event","ultimosAudios","preventDefault","setState","audio","state","openPodcast","getInitialProps","query","res","idChannel","id","requestChannel","requestAudio","requestSeries","Promise","all","fetch","status","channel","audios","series","statusCode","dataChannel","json","body","dataAudio","audio_clips","dataSeries","channels","error","render","console","log","title"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout'\r\nimport Serie from '../components/Serie'\r\n\r\nimport UltimosPodcast from '../components/UltimosPodcast'\r\nimport Error from 'next/error'\r\nexport default class extends React.Component {\r\n    constructor(props){\r\n        super (props)\r\n        this.state = { openPodcast: null}\r\n    }\r\n\r\n    static async getInitialProps({ query, res }) {\r\n        const idChannel = query.id\r\n        try{\r\n            let [requestChannel, requestAudio, requestSeries] = await Promise.all([\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n            ])\r\n\r\n            if(requestChannel.status >= 400){\r\n                return {\r\n                    channel: null, \r\n                    audios: null, \r\n                    series: null, \r\n                    statusCode: requestChannel.status\r\n                }\r\n            }\r\n            \r\n            const dataChannel = await requestChannel.json()\r\n            const channel = dataChannel.body.channel\r\n            \r\n            const dataAudio = await requestAudio.json()\r\n            const audios = dataAudio.body.audio_clips\r\n            \r\n            const dataSeries = await requestSeries.json()\r\n            const series = dataSeries.body.channels\r\n            \r\n\r\n            return { channel, audios, series }\r\n        }catch(error){\r\n            res.statusCode = 503\r\n            return {channel: null, audios: null, series: null, statusCode: 503 }\r\n        }\r\n    }\r\n\r\n    openPodcast = (event, ultimosAudios) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            audio\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { channel, audios, series, statusCode} = this.props\r\n        const { openPodcast } = this.state \r\n        console.log(openPodcast)\r\n        if(statusCode == 503){\r\n            return <Error statusCode={statusCode} />\r\n        }\r\n        if(statusCode >= 400){\r\n            return <Error statusCode={statusCode} />\r\n\r\n        }\r\n\r\n        return (\r\n            <Layout title={channel.title}>\r\n\r\n                {\r\n                    openPodcast &&\r\n                    <h2>ASDASDASDASDSA</h2>\r\n                }\r\n                \r\n                <h1>{channel.title}</h1>\r\n\r\n                <Serie series={series} channel={channel} />\r\n\r\n                <h2>Ultimos Podcast</h2>\r\n                \r\n                <UltimosPodcast ultimosAudios={audios} onClickPodcast={this.openPodcast}/>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}